# Customize the primary x-axis and y-axis
ax1.set_xlabel('Day of Year', fontsize=14)
ax1.set_ylabel('Cumulative Count', fontsize=14)
ax1.set_title('Cumulative Bird Strikes per Selected Year by Day', fontsize=20)
ax1.legend(title='Year', fontsize=10, title_fontsize='12')
ax1.grid(True)

# Create a secondary x-axis
ax2 = ax1.secondary_xaxis('top', functions=(lambda x: x, lambda x: x))
ax2.xaxis.set_major_locator(MonthLocator())
ax2.xaxis.set_major_formatter(DateFormatter('%b'))
ax2.set_xlabel('Month', fontsize=14)

plt.tight_layout()
plt.show()










# Assuming df is your DataFrame
# Sample data creation (You can replace this with your actual DataFrame)
data = {'year': np.random.randint(2000, 2012, 100)}
df = pd.DataFrame(data)

# Count the occurrences per year
yearly_counts = df['year'].value_counts().sort_index()

# Create the plot
plt.figure(fi





import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Sample data creation (You can replace this with your actual DataFrame)
np.random.seed(0)
dates = pd.date_range(start='2000-01-01', end='2011-12-31', freq='D')
data = {'date': np.random.choice(dates, 1000)}
df = pd.DataFrame(data)

# Add 'year' and 'day_of_year' columns
df['date'] = pd.to_datetime(df['date'])
df['year'] = df['date'].dt.year
df['day_of_year'] = df['date'].dt.dayofyear

# Group by 'year' and 'day_of_year', then count the occurrences
daily_counts = df.groupby(['year', 'day_of_year']).size().reset_index(name='count')

# Calculate the cumulative count for each year
daily_counts['cumulative_count'] = daily_counts.groupby('year')['count'].cumsum()

# Plot the cumulative counts
plt.figure(figsize=(14, 10))

for year, group in daily_counts.groupby('year'):
    plt.plot(group['day_of_year'], group['cumulative_count'], label=year)

# Customize the plot
plt.xlabel('Day of Year', fontsize=14)
plt.ylabel('Cumulative Count', fontsize=14)
plt.title('Cumulative Bird Strikes per Year by Day', fontsize=20)
plt.legend(title='Year', fontsize=10, title_fontsize='12')
plt.grid(True)

plt.tight_layout()
plt.show()

