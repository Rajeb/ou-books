metadata['snapshot_date'] = ""

for acqdate in metadata.acq_date.unique():
    inf = acqdate <= avail_snapshots_dates
    pos_follow = np.argmax(inf)
    following_snap = avail_snapshots_dates[pos_follow]
    metadata.loc[metadata.acq_date == acqdate, 'snapshot_date'] = str(following_snap)


# Convert dates to datetime objects
metadata['acq_date'] = pd.to_datetime(metadata['acq_date'])
avail_snapshots_dates = np.array(pd.to_datetime(avail_snapshots_dates))
# Ensure 'snapshot_date' is a string column
metadata['snapshot_date'] = ""

# Convert avail_snapshots_dates to numpy array if it is not already
avail_snapshots_dates = np.array(avail_snapshots_dates)

# Function to find the next available snapshot date
def find_next_snapshot(acqdate):
    inf = avail_snapshots_dates >= acqdate
    if np.any(inf):
        pos_follow = np.argmax(inf)
        return str(avail_snapshots_dates[pos_follow])
    else:
        return None  # Handle case where no snapshot date is available

# Apply the function to each acquisition date
metadata['snapshot_date'] = metadata['acq_date'].apply(find_next_snapshot)
