import pandas as pd
import geopandas as gpd
from shapely.geometry import Point
import re

# Function to convert various formats to decimal degrees
def convert_to_decimal(coord):
    # Check for plain integer (consider it as decimal degrees)
    if isinstance(coord, (int, float)):
        return float(coord)

    # Check if the coordinate is in DMS format
    dms_match = re.match(r'(\d+)d(\d+),?(\d+)?m?', coord)
    if dms_match:
        degrees = float(dms_match.group(1))
        minutes = float(dms_match.group(2))
        return degrees + minutes / 60

    # Check if the coordinate is in decimal degrees with degree symbol
    degree_symbol_match = re.match(r'(\d+)°?\s*(\d+\.?\d*)?', coord)
    if degree_symbol_match:
        degrees = float(degree_symbol_match.group(1))
        if degree_symbol_match.group(2):  # Check if there are decimal parts
            return degrees + float(degree_symbol_match.group(2)) / 60
        return degrees

    return None  # Return None if format is unrecognized

# Sample DataFrame with latitude and longitude
data = {
    'lat': ['38d38,066m', '35° 49.262', '315991', '91d00,00m'],  # Invalid: 91d00,00m
    'lon': ['77d00,12m', '180° 01.12', '240001', '200d00,00m']  # Invalid: 200d00,00m
}
df = pd.DataFrame(data)

# Convert lat/lon to decimal degrees
df['lat'] = df['lat'].apply(convert_to_decimal)
df['lon'] = df['lon'].apply(convert_to_decimal)

# Check for valid lat/lon
valid_lat = df['lat'].between(-90, 90)
valid_lon = df['lon'].between(-180, 180)

# Add a column to indicate validity
df['valid'] = valid_lat & valid_lon

# Filter valid coordinates
valid_df = df[df['valid']

# Convert to GeoDataFrame
geometry = [Point(xy) for xy in zip(valid_df['lon'], valid_df['lat'])]
gdf = gpd.GeoDataFrame(valid_df, geometry=geometry)

# Set the CRS of the original points (e.g., WGS84)
gdf.crs = "EPSG:4326"  # WGS84

# Convert to a different CRS (e.g., UTM zone 33N)
gdf_converted = gdf.to_crs("EPSG:32633")

# Display the converted GeoDataFrame
print(gdf_converted)



fire_latitude	fire_longitude	geometry
38.110973	-122.564512	{"type": "Point", "coordinates":-122.564512,38.110973}
35.45955	-120.72915	{"type": "Point", "coordinates":-120.72915,35.45955}
39.81977	-121.626222	{"type": "Point", "coordinates":-121.626222,39.81977}
37.676413	-119.779815	{"type": "Point", "coordinates":-119.84165,37.66550999}
36.685177	-119.04496	{"type": "Point", "coordinates":-119.04496,36.685177}
40.193799	-123.767755	{"type": "Point", "coordinates":-123.767755,40.193799}
38.302235	-120.94743	{"type": "Point", "coordinates":-120.94743,38.302235}
38.451818	-122.372941	{"type": "Point", "coordinates":-122.372941,38.451818}
39.110385	-121.333828	{"type": "Point", "coordinates":-121.333828,39.110385}
38.81503	-120.90241	{"type": "Point", "coordinates":-120.90241,38.81503}
35.072023	-120.590516	{"type": "Point", "coordinates":-120.590516,35.072023}
36.55751	-121.927949	{"type": "Point", "coordinates":-121.927949,36.55751}
36.98111	-120.026498	{"type": "Point", "coordinates":-120.026498,36.98111}
38.73283	-120.75239	{"type": "Point", "coordinates":-120.75239,38.73283}
36.7504334	-119.7483094	{"type": "Point", "coordinates":-119.7483094,36.7504334}
37.32843	-119.64296	{"type": "Point", "coordinates":-119.64296,37.32843}
37.9272306672	-122.0863509312	{"type": "Point", "coordinates":-122.0863509312,37.9272306672}
39.16901	-120.9612	{"type": "Point", "coordinates":-120.9612,39.16901}
37.90916	-122.057159	{"type": "Point", "coordinates":-122.057159,37.90916}
37.8892	-121.6134917	{"type": "Point", "coordinates":-121.6134917,37.8892}
38.652367	-120.627824	{"type": "Point", "coordinates":-120.627824,38.652367}
39.026958	-122.135309	{"type": "Point", "coordinates":-122.135309,39.026958}
36.40288999	-121.90944	{"type": "Point", "coordinates":-121.90944,36.40288999}
37.533845	-120.327692	{"type": "Point", "coordinates":-120.327692,37.533845}
37.94464	-121.969809	{"type": "Point", "coordinates":-121.969809,37.94464}
40.982866	-121.780158	{"type": "Point", "coordinates":-121.780158,40.982866}
37.96382	-122.524322	{"type": "Point", "coordinates":-122.524322,37.96382}
37.40303999	-121.905569	{"type": "Point", "coordinates":-121.905569,37.40303999}
40.16924999	-122.256919	{"type": "Point", "coordinates":-122.256919,40.16924999}
37.52319	-122.26541	{"type": "Point", "coordinates":-122.26541,37.52319}
38.10938	-122.86999	{"type": "Point", "coordinates":-122.86999,38.10938}
39.116441	-121.069298	{"type": "Point", "coordinates":-121.069298,39.116441}
36.58738999	-119.56865	{"type": "Point", "coordinates":-119.56865,36.58738999}
37.99139999	-121.66822	{"type": "Point", "coordinates":-121.66822,37.99139999}
38.337	-121.860088	{"type": "Point", "coordinates":-121.860088,38.337}
38.38555	-122.53028	{"type": "Point", "coordinates":-122.53028,38.38555}
37.590825	-122.350225	{"type": "Point", "coordinates":-122.350225,37.590825}
38.291897	-122.270605	{"type": "Point", "coordinates":-122.270605,38.291897}
37.15677999	-121.986819	{"type": "Point", "coordinates":-121.986819,37.15677999}
37.79381	-120.984189	{"type": "Point", "coordinates":-120.984189,37.79381}
39.40236999	-122.014139	{"type": "Point", "coordinates":-122.014139,39.40236999}
35.302431	-120.71591	{"type": "Point", "coordinates":-120.71591,35.302431}
38.0934533	-122.2344333	{"type": "Point", "coordinates":-122.2344333,38.0934533}
38.59010999	-121.80422	{"type": "Point", "coordinates":-121.80422,38.59010999}
38.64354	-120.69588	{"type": "Point", "coordinates":-120.69588,38.64354}
36.58681	-119.61136	{"type": "Point", "coordinates":-119.61136,36.58681}
37.86781	-121.63822	{"type": "Point", "coordinates":-121.63822,37.86781}
36.73252	-120.40494	{"type": "Point", "coordinates":-120.40494,36.73252}
36.5356483	-119.378965	{"type": "Point", "coordinates":-119.378965,36.5356483}
39.02942	-121.29275	{"type": "Point", "coordinates":-121.29275,39.02942}
38.12062999	-121.9545	{"type": "Point", "coordinates":-121.9545,38.12062999}
39.29657999	-121.826279	{"type": "Point", "coordinates":-121.826279,39.29657999}
36.43789999	-121.91983	{"type": "Point", "coordinates":-121.91983,36.43789999}
35.3431	-119.043049	{"type": "Point", "coordinates":-119.043049,35.3431}
39.7529533	-123.2361533	{"type": "Point", "coordinates":-123.2361533,39.7529533}
38.98026999	-121.414659	{"type": "Point", "coordinates":-121.414659,38.98026999}
36.45800521	-119.347221	{"type": "Point", "coordinates":-119.347221,36.45800521}
36.966488	-119.383132	{"type": "Point", "coordinates":-119.383132,36.966488}
38.26927999	-121.60294	{"type": "Point", "coordinates":-121.60294,38.26927999}
38.151	-121.680369	{"type": "Point", "coordinates":-121.680369,38.151}
39.3223	-121.9849	{"type": "Point", "coordinates":-121.9849,39.3223}
39.83874	-121.70232	{"type": "Point", "coordinates":-121.70232,39.83874}
37.94585	-122.37201	{"type": "Point", "coordinates":-122.37201,37.94585}
38.23127068	-122.0635498	{"type": "Point", "coordinates":-122.0635498,38.23127068}
38.01573292	-122.688853	{"type": "Point", "coordinates":-122.688853,38.01573292}
38.09724999	-121.317849	{"type": "Point", "coordinates":-121.317849,38.09724999}
37.7438	-121.934	{"type": "Point", "coordinates":-121.934,37.7438}
38.02104	-120.599098	{"type": "Point", "coordinates":-120.599098,38.02104}
38.15608	-121.67886	{"type": "Point", "coordinates":-121.67886,38.15608}
37.0348633	-119.5242267	{"type": "Point", "coordinates":-119.5242267,37.0348633}
36.1653733	-120.37372	{"type": "Point", "coordinates":-120.37372,36.1653733}
39.546503	-121.856668	{"type": "Point", "coordinates":-121.856668,39.546503}
36.800451	-121.770182	{"type": "Point", "coordinates":-121.770182,36.800451}
38.754031	-121.223778	{"type": "Point", "coordinates":-121.223778,38.754031}
38.2342	-121.21311	{"type": "Point", "coordinates":-121.21311,38.2342}
36.45426	-119.13382	{"type": "Point", "coordinates":-119.13382,36.45426}
36.967201	-120.093086	{"type": "Point", "coordinates":-120.093086,36.967201}
36.7257833	-119.7906833	{"type": "Point", "coordinates":-119.7906833,36.7257833}
38.5389967	-122.7920283	{"type": "Point", "coordinates":-122.7920283,38.5389967}
37.9378333	-120.6089683	{"type": "Point", "coordinates":-120.6089683,37.9378333}
36.7402	-119.76128	{"type": "Point", "coordinates":-119.76128,36.7402}
37.926505	-121.232025	{"type": "Point", "coordinates":-121.232025,37.926505}
37.299447	-122.163055	{"type": "Point", "coordinates":-122.163055,37.299447}
34.6689	-120.0286	{"type": "Point", "coordinates":-120.0286,34.6689}
38.70626	-121.01901	{"type": "Point", "coordinates":-121.01901,38.70626}
35.724495	-119.534135	{"type": "Point", "coordinates":-119.534135,35.724495}
39.0472	-120.78589	{"type": "Point", "coordinates":-120.78589,39.0472}
36.8024	-119.8254	{"type": "Point", "coordinates":-119.8254,36.8024}
37.454629	-121.933108	{"type": "Point", "coordinates":-121.933108,37.454629}
37.30393	-120.52747	{"type": "Point", "coordinates":-120.52747,37.30393}
39.740951	-121.607869	{"type": "Point", "coordinates":-121.607869,39.740951}
39.11112	-121.55647	{"type": "Point", "coordinates":-121.55647,39.11112}
37.9078710075	-120.4853514762	{"type": "Point", "coordinates":-120.4853514762,37.9078710075}
37.9884	-122.097	{"type": "Point", "coordinates":-122.097,37.9884}
40.3252	-124.2881	{"type": "Point", "coordinates":-124.2881,40.3252}
39.5891304909	-122.2014109001	{"type": "Point", "coordinates":-122.2014109001,39.5891304909}
37.08016	-120.019445	{"type": "Point", "coordinates":-120.019445,37.08016}
36.014363	-119.955587	{"type": "Point", "coordinates":-119.955587,36.014363}
37.129616	-122.312436	{"type": "Point", "coordinates":-122.312436,37.129616}
38.684097	-120.654609	{"type": "Point", "coordinates":-120.654609,38.684097}
37.9474031844	-121.2854970299	{"type": "Point", "coordinates":-121.2854970299,37.9474031844}
40.6421139	-122.3971064	{"type": "Point", "coordinates":-122.3971064,40.6421139}
39.4958005	-121.5441588	{"type": "Point", "coordinates":-121.5441588,39.4958005}
37.98774999	-122.30355	{"type": "Point", "coordinates":-122.30355,37.98774999}
37.95963056	-120.7481194	{"type": "Point", "coordinates":-120.7481194,37.95963056}
null	null	null
36.6662982	-121.6242319	{"type": "Point", "coordinates":-121.6242319,36.6662982}
37.836472	-122.216305	{"type": "Point", "coordinates":-122.216305,37.836472}
36.40832	-119.9411733	{"type": "Point", "coordinates":-119.9411733,36.40832}
39.42490556	-122.6026083	{"type": "Point", "coordinates":-122.6026083,39.42490556}
37.609685	-121.360447	{"type": "Point", "coordinates":-121.360447,37.609685}
36.13464	-119.5489	{"type": "Point", "coordinates":-119.5489,36.13464}
36.7364633	-119.5926467	{"type": "Point", "coordinates":-119.5926467,36.7364633}
37.36356	-120.503209	{"type": "Point", "coordinates":-120.503209,37.36356}
38.974922	-121.609981	{"type": "Point", "coordinates":-121.609981,38.974922}
39.5156567	-121.5421383	{"type": "Point", "coordinates":-121.5421383,39.5156567}
36.518337	-119.631371	{"type": "Point", "coordinates":-119.631371,36.518337}
39.5095367	-123.749245	{"type": "Point", "coordinates":-123.749245,39.5095367}
36.597936	-119.440717	{"type": "Point", "coordinates":-119.440717,36.597936}
37.150883	-121.974132	{"type": "Point", "coordinates":-121.974132,37.150883}
40.3238498789	-124.2931900463	{"type": "Point", "coordinates":-124.2931900463,40.3238498789}
39.2813233	-123.2335017	{"type": "Point", "coordinates":-123.2335017,39.2813233}
35.369277	-118.998458	{"type": "Point", "coordinates":-118.998458,35.369277}
37.930803	-121.233387	{"type": "Point", "coordinates":-121.233387,37.930803}
39.937716	-122.149468	{"type": "Point", "coordinates":-122.149468,39.937716}
36.643753	-121.029411	{"type": "Point", "coordinates":-121.029411,36.643753}
37.09974	-120.83611	{"type": "Point", "coordinates":-120.83611,37.09974}
35.349684	-119.036415	{"type": "Point", "coordinates":-119.036415,35.349684}
36.9372167	-119.4557033	{"type": "Point", "coordinates":-119.4557033,36.9372167}
40.1918383	-123.537335	{"type": "Point", "coordinates":-123.537335,40.1918383}
38.689134	-120.785117	{"type": "Point", "coordinates":-120.785117,38.689134}
39.680908	-121.569931	{"type": "Point", "coordinates":-121.569931,39.680908}
35.009957	-119.069138	{"type": "Point", "coordinates":-119.069138,35.009957}
40.8655946	-121.9125022	{"type": "Point", "coordinates":-121.9125022,40.8655946}
38.502571	-122.381111	{"type": "Point", "coordinates":-122.381111,38.502571}
39.2537817	-122.47077	{"type": "Point", "coordinates":-122.47077,39.2537817}
38.5777217	-120.8555817	{"type": "Point", "coordinates":-120.8555817,38.5777217}
38.771722	-122.540478	{"type": "Point", "coordinates":-122.540478,38.771722}
40.557063	-122.466327	{"type": "Point", "coordinates":-122.466327,40.557063}
37.9758789325	-122.5529550398	{"type": "Point", "coordinates":-122.5529550398,37.9758789325}
38.92624	-121.42158	{"type": "Point", "coordinates":-121.42158,38.92624}
38.655605	-121.0225933	{"type": "Point", "coordinates":-121.0225933,38.655605}
null	null	null
36.96557	-121.868129	{"type": "Point", "coordinates":-121.868129,36.96557}
37.5260967	-121.9703483	{"type": "Point", "coordinates":-121.9703483,37.5260967}
40.3431083	-122.8591267	{"type": "Point", "coordinates":-122.8591267,40.3431083}
36.6151955	-121.8448536	{"type": "Point", "coordinates":-121.8448536,36.6151955}
36.787133	-119.652086	{"type": "Point", "coordinates":-119.652086,36.787133}
37.4655433	-119.90052	{"type": "Point", "coordinates":-119.90052,37.4655433}
39.754524413	-123.2202086431	{"type": "Point", "coordinates":-123.2202086431,39.754524413}
36.73693	-119.6349983	{"type": "Point", "coordinates":-119.6349983,36.73693}
35.421316	-120.862738	{"type": "Point", "coordinates":-120.862738,35.421316}
37.2464217	-120.4375667	{"type": "Point", "coordinates":-120.4375667,37.2464217}
39.5219467	-122.196135	{"type": "Point", "coordinates":-122.196135,39.5219467}
36.81453829	-119.9795291	{"type": "Point", "coordinates":-119.9795291,36.81453829}
39.660711	-121.629499	{"type": "Point", "coordinates":-121.629499,39.660711}
39.9301	-122.2491	{"type": "Point", "coordinates":-122.2491,39.9301}
40.7086017	-122.240285	{"type": "Point", "coordinates":-122.240285,40.7086017}
37.948325	-122.337623	{"type": "Point", "coordinates":-122.337623,37.948325}
39.749545	-122.188202	{"type": "Point", "coordinates":-122.188202,39.749545}
41.056932	-124.102352	{"type": "Point", "coordinates":-124.102352,41.056932}
38.17537999	-121.96432	{"type": "Point", "coordinates":-121.96432,38.17537999}
38.21441	-122.10226	{"type": "Point", "coordinates":-122.10226,38.21441}
37.682869	-122.111392	{"type": "Point", "coordinates":-122.111392,37.682869}
36.989713	-121.976723	{"type": "Point", "coordinates":-121.976723,36.989713}
40.50968	-124.162393	{"type": "Point", "coordinates":-124.162393,40.50968}
37.711228	-122.104628	{"type": "Point", "coordinates":-122.104628,37.711228}
35.04057999	-120.475449	{"type": "Point", "coordinates":-120.475449,35.04057999}
36.76316999	-121.73536	{"type": "Point", "coordinates":-121.73536,36.76316999}
34.864898	-120.34016	{"type": "Point", "coordinates":-120.34016,34.864898}
39.781601	-121.680909	{"type": "Point", "coordinates":-121.680909,39.781601}
39.75692999	-121.7359	{"type": "Point", "coordinates":-121.7359,39.75692999}
38.3704	-122.967848	{"type": "Point", "coordinates":-122.967848,38.3704}
38.608155	-120.9532267	{"type": "Point", "coordinates":-120.9532267,38.608155}
37.755649	-121.437181	{"type": "Point", "coordinates":-121.437181,37.755649}
40.437812	-124.385895	{"type": "Point", "coordinates":-124.385895,40.437812}
37.772815	-122.41867	{"type": "Point", "coordinates":-122.41867,37.772815}
38.266581	-122.021167	{"type": "Point", "coordinates":-122.021167,38.266581}
37.59092	-121.95584	{"type": "Point", "coordinates":-121.95584,37.59092}
40.5328201	-124.0982868	{"type": "Point", "coordinates":-124.0982868,40.5328201}
40.4249963	-122.2261535	{"type": "Point", "coordinates":-122.2261535,40.4249963}
38.644608	-121.596181	{"type": "Point", "coordinates":-121.596181,38.644608}
37.79311944	-120.7881528	{"type": "Point", "coordinates":-120.7881528,37.79311944}
37.2413787	-121.9819907	{"type": "Point", "coordinates":-121.9819907,37.2413787}
36.137855	-119.8877483	{"type": "Point", "coordinates":-119.8877483,36.137855}
36.86922	-121.70859	{"type": "Point", "coordinates":-121.70859,36.86922}
37.7339659686	-120.07761	{"type": "Point", "coordinates":-120.07761,37.7339659686}
39.4943333	-121.6886944	{"type": "Point", "coordinates":-121.6886944,39.4943333}
40.0028986619	-122.0905490521	{"type": "Point", "coordinates":-122.0905490521,40.0028986619}
35.04922	-120.48271	{"type": "Point", "coordinates":-120.48271,35.04922}
37.3306733	-121.9304449	{"type": "Point", "coordinates":-121.9304449,37.3306733}
40.38862	-122.3967633	{"type": "Point", "coordinates":-122.3967633,40.38862}
37.864265	-122.1082067	{"type": "Point", "coordinates":-122.1082067,37.864265}
40.1385467	-122.20907	{"type": "Point", "coordinates":-122.20907,40.1385467}
37.0371383	-119.5209233	{"type": "Point", "coordinates":-119.5209233,37.0371383}
35.235648	-119.091387	{"type": "Point", "coordinates":-119.091387,35.235648}
38.8707883	-121.1308333	{"type": "Point", "coordinates":-121.1308333,38.8707883}
36.5543	-119.88219	{"type": "Point", "coordinates":-119.88219,36.5543}
37.978222	-122.54665	{"type": "Point", "coordinates":-122.54665,37.978222}
38.342415	-121.986128	{"type": "Point", "coordinates":-121.986128,38.342415}
38.93626	-122.6266367	{"type": "Point", "coordinates":-122.6266367,38.93626}
37.983928	-120.403136	{"type": "Point", "coordinates":-120.403136,37.983928}
36.829521	-119.913392	{"type": "Point", "coordinates":-119.913392,36.829521}
38.11067999	-122.902509	{"type": "Point", "coordinates":-122.902509,38.11067999}
38.82003	-120.84939	{"type": "Point", "coordinates":-120.84939,38.82003}
37.35466	-119.87683	{"type": "Point", "coordinates":-119.87683,37.35466}
38.369325	-121.980098	{"type": "Point", "coordinates":-121.980098,38.369325}
39.7123467	-122.27968	{"type": "Point", "coordinates":-122.27968,39.7123467}
35.4039683	-118.89504	{"type": "Point", "coordinates":-118.89504,35.4039683}
36.9811667	-119.87987	{"type": "Point", "coordinates":-119.87987,36.9811667}
38.159075	-121.703955	{"type": "Point", "coordinates":-121.703955,38.159075}
37.7150483	-121.417535	{"type": "Point", "coordinates":-121.417535,37.7150483}
36.967285	-120.0496483	{"type": "Point", "coordinates":-120.0496483,36.967285}
38.5120583	-122.006325	{"type": "Point", "coordinates":-122.006325,38.5120583}
38.2559933	-122.04773	{"type": "Point", "coordinates":-122.04773,38.2559933}
35.3477933	-118.80779	{"type": "Point", "coordinates":-118.80779,35.3477933}
40.1536917	-122.2473333	{"type": "Point", "coordinates":-122.2473333,40.1536917}
36.958049	-120.109356	{"type": "Point", "coordinates":-120.109356,36.958049}
37.8599483	-120.9061267	{"type": "Point", "coordinates":-120.9061267,37.8599483}
36.21684	-121.1268617	{"type": "Point", "coordinates":-121.1268617,36.21684}
37.9573067	-121.22331	{"type": "Point", "coordinates":-121.22331,37.9573067}
38.0269983	-121.8786283	{"type": "Point", "coordinates":-121.8786283,38.0269983}
38.8675283	-121.701675	{"type": "Point", "coordinates":-121.701675,38.8675283}
37.56246	-122.0050217	{"type": "Point", "coordinates":-122.0050217,37.56246}
36.902514	-120.03749	{"type": "Point", "coordinates":-120.03749,36.902514}
38.726296	-120.797807	{"type": "Point", "coordinates":-120.797807,38.726296}
38.8472217	-121.1067983	{"type": "Point", "coordinates":-121.1067983,38.8472217}
38.284355	-122.11838	{"type": "Point", "coordinates":-122.11838,38.284355}
37.9533792	-122.3543547	{"type": "Point", "coordinates":-122.3543547,37.9533792}
38.29295	-120.927894	{"type": "Point", "coordinates":-120.927894,38.29295}
36.6810383	-121.8012383	{"type": "Point", "coordinates":-121.8012383,36.6810383}
36.0532	-120.91623	{"type": "Point", "coordinates":-120.91623,36.0532}
39.0445	-122.91569	{"type": "Point", "coordinates":-122.91569,39.0445}
37.4077667	-121.9065867	{"type": "Point", "coordinates":-121.9065867,37.4077667}
35.277815	-119.0457833	{"type": "Point", "coordinates":-119.0457833,35.277815}
38.695054	-120.886349	{"type": "Point", "coordinates":-120.886349,38.695054}
37.79719	-121.18763	{"type": "Point", "coordinates":-121.18763,37.79719}
38.0287233	-120.421355	{"type": "Point", "coordinates":-120.421355,38.0287233}
35.2084883	-118.9141033	{"type": "Point", "coordinates":-118.9141033,35.2084883}
38.5541817	-122.6122317	{"type": "Point", "coordinates":-122.6122317,38.5541817}
40.437835	-122.3976483	{"type": "Point", "coordinates":-122.3976483,40.437835}
41.093455	-123.694231	{"type": "Point", "coordinates":-123.694231,41.093455}
38.0355	-121.4986	{"type": "Point", "coordinates":-121.4986,38.0355}
36.8367633	-120.0194133	{"type": "Point", "coordinates":-120.0194133,36.8367633}
37.295035	-120.3200583	{"type": "Point", "coordinates":-120.3200583,37.295035}
37.796685	-121.448855	{"type": "Point", "coordinates":-121.448855,37.796685}
36.9766	-122.0354633	{"type": "Point", "coordinates":-122.0354633,36.9766}
37.255085	-121.0116433	{"type": "Point", "coordinates":-121.0116433,37.255085}
38.9027967	-120.9335	{"type": "Point", "coordinates":-120.9335,38.9027967}
35.395885	-119.1202483	{"type": "Point", "coordinates":-119.1202483,35.395885}
35.6652317	-120.689865	{"type": "Point", "coordinates":-120.689865,35.6652317}
36.81629	-119.7180683	{"type": "Point", "coordinates":-119.7180683,36.81629}
37.79045	-121.2305617	{"type": "Point", "coordinates":-121.2305617,37.79045}
39.753835	-121.9189983	{"type": "Point", "coordinates":-121.9189983,39.753835}
35.6959233	-120.6807933	{"type": "Point", "coordinates":-120.6807933,35.6959233}
37.3184717	-121.1084117	{"type": "Point", "coordinates":-121.1084117,37.3184717}
36.990985	-120.10581	{"type": "Point", "coordinates":-120.10581,36.990985}
39.9426683	-120.9227767	{"type": "Point", "coordinates":-120.9227767,39.9426683}
38.107557	-122.203809	{"type": "Point", "coordinates":-122.203809,38.107557}
36.026436	-121.250775	{"type": "Point", "coordinates":-121.250775,36.026436}
35.39468553	-119.0430792	{"type": "Point", "coordinates":-119.0430792,35.39468553}
38.431565	-121.9154633	{"type": "Point", "coordinates":-121.9154633,38.431565}
38.491158	-122.479681	{"type": "Point", "coordinates":-122.479681,38.491158}
39.152885	-121.0294367	{"type": "Point", "coordinates":-121.0294367,39.152885}
38.448942	-122.749466	{"type": "Point", "coordinates":-122.749466,38.448942}
34.869554	-120.247174	{"type": "Point", "coordinates":-120.247174,34.869554}
37.2582283	-120.5416783	{"type": "Point", "coordinates":-120.5416783,37.2582283}
36.98806	-120.0749	{"type": "Point", "coordinates":-120.0749,36.98806}
36.836785	-119.88767	{"type": "Point", "coordinates":-119.88767,36.836785}
38.6283067	-120.69913	{"type": "Point", "coordinates":-120.69913,38.6283067}
37.0951177157	-121.6471092318	{"type": "Point", "coordinates":-121.6471092318,37.0951177157}
38.8107767	-123.5414517	{"type": "Point", "coordinates":-123.5414517,38.8107767}
37.9779103	-120.3041813	{"type": "Point", "coordinates":-120.3041813,37.9779103}
37.6494217	-120.357015	{"type": "Point", "coordinates":-120.357015,37.6494217}
35.409145	-119.017917	{"type": "Point", "coordinates":-119.017917,35.409145}
34.887375	-120.3831733	{"type": "Point", "coordinates":-120.3831733,34.887375}
37.5945967	-121.3067183	{"type": "Point", "coordinates":-121.3067183,37.5945967}
37.7877426937	-121.6232221516	{"type": "Point", "coordinates":-121.6232221516,37.7877426937}
40.5523617	-122.1849333	{"type": "Point", "coordinates":-122.1849333,40.5523617}
38.25397	-122.055835	{"type": "Point", "coordinates":-122.055835,38.25397}
36.886612	-121.634773	{"type": "Point", "coordinates":-121.634773,36.886612}
37.6286067	-122.1021433	{"type": "Point", "coordinates":-122.1021433,37.6286067}
37.697254	-120.337092	{"type": "Point", "coordinates":-120.337092,37.697254}
39.796817	-121.903138	{"type": "Point", "coordinates":-121.903138,39.796817}
38.598098	-120.851208	{"type": "Point", "coordinates":-120.851208,38.598098}
38.45873292	-122.6337042	{"type": "Point", "coordinates":-122.6337042,38.45873292}
37.280412	-121.90419	{"type": "Point", "coordinates":-121.90419,37.280412}
37.1984067	-120.2435317	{"type": "Point", "coordinates":-120.2435317,37.1984067}
37.294824	-120.451778	{"type": "Point", "coordinates":-120.451778,37.294824}
35.2212117	-119.01901	{"type": "Point", "coordinates":-119.01901,35.2212117}
38.8161267	-121.3118567	{"type": "Point", "coordinates":-121.3118567,38.8161267}
37.31068	-122.0262	{"type": "Point", "coordinates":-122.0262,37.31068}
40.657925	-122.4211	{"type": "Point", "coordinates":-122.4211,40.657925}
36.71984	-119.7625517	{"type": "Point", "coordinates":-119.7625517,36.71984}
35.3184183	-118.7984833	{"type": "Point", "coordinates":-118.7984833,35.3184183}
37.4204	-120.6676	{"type": "Point", "coordinates":-120.6676,37.4204}
38.065376	-122.145981	{"type": "Point", "coordinates":-122.145981,38.065376}
38.560231	-121.786321	{"type": "Point", "coordinates":-121.786321,38.560231}
36.323355	-121.2116783	{"type": "Point", "coordinates":-121.2116783,36.323355}
35.29285	-119.00282	{"type": "Point", "coordinates":-119.00282,35.29285}


















def create_geometry(df, geometry_field):
    df = df.withColumn("geom", ST_GeomFromGeoJSON(geometry_field))
    df = df.withColumn("valid", ST_IsValid("geom"))
    df = df.filter(col("valid") == True).drop("valid")
    df = df.withColumn(
        "geom", ST_Transform("geom", lit("EPSG:4326"), lit("EPSG:32610"))
    )
    df = df.withColumn("geometry", ST_AsText("geom"))
    return df




def link_function(ctx, failures, fia_geometry_cleaned):
    # create geometries
    failures = create_geometry(failures, "geometry")
    fia_geometry_cleaned = create_geometry(fia_geometry_cleaned, "geometry")

    # # do intersections
    failures.registerTempTable("failures")
    fia_geometry_cleaned.registerTempTable("fia_geometry_cleaned")

    queryOverlap = """
        SELECT p.*, z.fia
    #     FROM failures as p, fia_geometry_cleaned as z
    #     WHERE ST_Intersects(p.geom, z.geom)
return df

    intersection_dataframe = ctx.spark_session.sql(queryOverlap)  # noqa

    return intersection_dataframe.drop("geom")
    
    # SELECT p.*, z.fia
    #     FROM failures as p, fia_geometry_cleaned as z
    #     WHERE ST_Intersects(p.geom, z.geom)
return df


def get_pixel_primary_key(
    spark,
    point_df,
    pixel_df,
    point_df_primary_keys: list = ["global_id"],
    point_df_geom_col: str = "geometry",
    pixel_primary_key: str = "pk_row_col",
    pixel_geom_col: str = "geometry",
    include_all_pixel_columns=False,
):
    """
    Label transformers with the pixel primary key so that spatial & weather data can be joined via pixel
    """
    # Concatenate the primary keys into a single column called 'combined_pk'
    combined_txfr_pk = F.concat_ws("_", *point_df_primary_keys).alias("combined_pk")

    # filter to temp dataset to avoid error from Null geometries
    df_temp = (
        point_df.filter(F.col(point_df_geom_col).isNotNull())
        .select(
            combined_txfr_pk,
            stc.ST_GeomFromGeoJSON(point_df_geom_col).alias(
                point_df_geom_col
            ),  # convert to geometry type
        )
        .distinct()
    )

    # prep the pixel df
    pixel_df = (
        pixel_df.filter(F.col(pixel_geom_col).isNotNull())
        .select(
            pixel_primary_key,
            stc.ST_GeomFromGeoJSON(pixel_geom_col).alias("pixel_geometry"),
        )
        .distinct()
    )

    # join with txfr with pixel dataset using indexed & optimized spatial join function
    df_temp = polygon_contains_point(
        spark=spark,
        df_polygons=pixel_df,
        df_points=df_temp,
        polygon_geometry="pixel_geometry",
        point_geometry=point_df_geom_col,
        max_partitions=64,
    )















Ambiguous self-joins fail in Spark 3

Message not helpful?
Column date#76 are ambiguous. It's probably because you joined several Datasets together, and some of these Datasets are the same. This column points to one of the Datasets but Spark is unable to figure out which one. Please alias the Datasets with different names via Dataset.alias before joining them, and specify the column using the qualified name, e.g. df.alias("a").join(df.alias("b"), F.col("a.id") > F.col("b.id")). Please see documentation for more details.

url ="https://yb8oqn9m7d.internal.us-west-2.ss.pge.com/rating_on_fia_startdate/v1?start_date=20240715"

except requests.exceptions.RequestException as e:
    print(f"Error encountered: {e}")
url = “https://yb8oqn9m7d.internal.us-west-2.ss.pge.com/rating_on_fia_startdate/v1”
api_key = " ciMlnk2Bmp3rMDXtItRw24hVKPLySKmq8asLBYEb "
header = {"x-api-key": api_key}
response = requests.get(url=url, headers=header, verify=False)
fia_data = response.json()
print (fia_data)

############Climate data
def create_geometry(df, geometry_field):
    df = df.withColumn("geom", ST_GeomFromGeoJSON(geometry_field))
    df = df.withColumn("valid", ST_IsValid("geom"))
    df = df.filter(col("valid") == True).drop("valid")
    df = df.withColumn(
        "geom", ST_Transform("geom", lit("EPSG:4326"), lit("EPSG:32610"))
    )
    df = df.withColumn("geometry", ST_AsText("geom"))
    return df

def create_geometry(df, geometry_field):
    # Convert GeoJSON strings to geometries
    df['geometry'] = df[geometry_field].apply(lambda x: shape(x))
    
    # Create a GeoDataFrame
    gdf = gpd.GeoDataFrame(df, geometry='geometry')
    
    # Set the original CRS
    gdf.set_crs(epsg=4326, inplace=True)
    
    # Filter valid geometries
    gdf = gdf[gdf.is_valid]
    
    # Transform to a new CRS (EPSG:32610)
    gdf = gdf.to_crs(epsg=32610)
    
    # Convert geometries to WKT
    gdf['geometry'] = gdf['geometry'].apply(lambda geom: geom.wkt)
    
    return pd.DataFrame(gdf)

https://agupubs.onlinelibrary.wiley.com/doi/full/10.1029/2020JD033180
https://agupubs.onlinelibrary.wiley.com/doi/full/10.1029/2023JD039136


queryOverlap = """
        SELECT p.TREEID,p.wkt,tm.geometry as tm_geom, tm.value as mort_per, tm.pk_row_col
        FROM canopy_data as cp, tree_mortality_df as tm
        ST_Intersection(cp.wkt, mt.tm_geom)
        WHERE (ST_Intersects(ST_GeomFromWKT(cp.wkt), ST_GeomFromWKT(mt.tm_geom))
        """
edited
queryOverlap = """
    SELECT 
        cp.TREEID, 
        cp.wkt, 
        tm.geometry as tm_geom, 
        tm.value as mort_per, 
        tm.pk_row_col
    FROM 
        canopy_data as cp, 
        tree_mortality_df as tm
    WHERE 
        ST_Intersects(ST_GeomFromWKT(cp.wkt), ST_GeomFromWKT(tm.geometry))
    """


----------
transform(
    out=Output(
        "/PG&E/workflow_rada_dev/logic/TxCFO_models/datasets/vegetation/data_pipeline/raster_datasets/test1"
    ),
    tree_mortality_df=Input("ri.foundry.main.dataset.04a3e876-bc72-4acd-8fe8-b0815a4422f2"),
    canopy_data=Input("ri.foundry.main.dataset.86a4958b-bc33-491d-babd-d613dc6991cf")
)
def compute(ctx, out, tree_mortality_df, canopy_data):
    spark = ctx.spark_session
    SedonaRegistrator.registerAll(spark)
    canopy_data.registerTempTable("canopy_data")
    tree_mortality_df.registerTempTable("tree_mortality_df")
 
    queryOverlap = """
    SELECT
        cp.TREEID,
        cp.wkt,
        tm.geometry as tm_geom,
        tm.value as mort_per,
        tm.pk_row_col,
        AVG(tm.value) as avg_mort_per,
        ST_Intersection(ST_GeomFromWKT(cp.wkt), ST_GeomFromWKT(tm.geometry)) as intersection
    FROM
        canopy_data as cp, 
        tree_mortality_df as tm
    WHERE
        ST_Intersects(ST_GeomFromWKT(cp.wkt), ST_GeomFromWKT(tm.geometry))
    GROUP BY
    cp.TREEID
    """
    result_df =spark.sql(queryOverlap)
    out.write_dataframe(result_df)
